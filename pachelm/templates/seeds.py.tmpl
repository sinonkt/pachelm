# generated by pachydelm v{{ ctx.version }}
from pachelm.core import PachydermMigration

class {{ fns.to_class_name(args['migration']) }}(PachydermMigration):

  def up(self):
    # another way to deal with commit.
    # commitId = self.pfs.start_commit(repo_name, branch=None, parent=None)
    # self.pfs.finish_commit(commit)
    
    # with self.pfs.commit('repo', 'branch') as c:
    #   self.pfs.put_file_bytes(c, path, value, delimiter=0, target_file_datums=0, target_file_bytes=0)
    #   self.pfs.put_file_url(c, path, url, recursive=False)
    print('up_eiei_{{ args.name }}')

  def down(self):
    # self.pfs.get_file(commit, path, offset_bytes=0, size_bytes=0, extract_value=True)
    # self.pfs.get_files(commit, paths, recursive=False)
    # self.pfs.get_files('test/master', '/', recursive=True)
    # deletes files or not is up to you
    print('down_eiei_{{ args.name }}')